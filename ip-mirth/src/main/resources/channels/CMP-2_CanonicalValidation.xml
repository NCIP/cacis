<channel>
  <id>12fb1591-0cd6-4c99-b452-a86b7df9d59f</id>
  <name>CMP-2_CanonicalValidation</name>
  <description>Arch name CanonicalSchemaValidationChannel and CanonicalSchematronValidationChannel</description>
  <enabled>true</enabled>
  <version>2.1.1.5488</version>
  <lastModified>
    <time>1316123607717</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>5</revision>
  <sourceConnector>
    <name>sourceConnector</name>
    <properties>
      <property name="DataType">Channel Reader</property>
      <property name="responseValue">validationMsg</property>
    </properties>
    <transformer>
      <steps>
        <step>
          <sequenceNumber>0</sequenceNumber>
          <name>xsdValidation</name>
          <script>logger.info(messageObject.getId());
logger.info(messageObject.getSource());

var valMsgKey = &apos;validationMsg&apos;;

//put the placeholder msg, key has to be string, cannot use variable
responseMap.put(&apos;validationMsg&apos;,ResponseFactory.getSuccessResponse(&apos;OK&apos;));

//perform schema validation for canonical
var cdfXsdValidationMsg = xsdValidateCanonical(message);
if (cdfXsdValidationMsg != null) { 
	responseMap.put(valMsgKey, ResponseFactory.getFailureResponse(&apos;Canonical Schema Validation:&apos; + cdfXsdValidationMsg));
	return;
}</script>
          <type>JavaScript</type>
          <data class="map">
            <entry>
              <string>Script</string>
              <string>logger.info(messageObject.getId());
logger.info(messageObject.getSource());

var valMsgKey = &apos;validationMsg&apos;;

//put the placeholder msg, key has to be string, cannot use variable
responseMap.put(&apos;validationMsg&apos;,ResponseFactory.getSuccessResponse(&apos;OK&apos;));

//perform schema validation for canonical
var cdfXsdValidationMsg = xsdValidateCanonical(message);
if (cdfXsdValidationMsg != null) { 
	responseMap.put(valMsgKey, ResponseFactory.getFailureResponse(&apos;Canonical Schema Validation:&apos; + cdfXsdValidationMsg));
	return;
}</string>
            </entry>
          </data>
        </step>
      </steps>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundProtocol>XML</inboundProtocol>
      <outboundProtocol>XML</outboundProtocol>
      <inboundProperties>
        <property name="stripNamespaces">false</property>
      </inboundProperties>
      <outboundProperties>
        <property name="stripNamespaces">false</property>
      </outboundProperties>
    </transformer>
    <filter>
      <rules/>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <version>2.1.1.5490</version>
  </sourceConnector>
  <destinationConnectors>
    <connector>
      <name>CdwLoadProcessStart</name>
      <properties>
        <property name="DataType">Channel Writer</property>
        <property name="host">e91b5581-5aa1-48b5-90e4-8b8214a85d95</property>
        <property name="synchronised">1</property>
        <property name="template">${message.encodedData}</property>
      </properties>
      <transformer>
        <steps/>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">false</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">false</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.1.1.5488</version>
    </connector>
  </destinationConnectors>
  <properties>
    <property name="clearGlobalChannelMap">true</property>
    <property name="dont_store_filtered">true</property>
    <property name="encryptData">false</property>
    <property name="error_messages_only">true</property>
    <property name="initialState">started</property>
    <property name="max_message_age">-1</property>
    <property name="store_messages">true</property>
    <property name="synchronous">true</property>
    <property name="transactional">false</property>
  </properties>
  <preprocessingScript>// Modify the message variable below to pre process data
// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed



return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <shutdownScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</shutdownScript>
</channel>