<channel>
  <id>e1b26470-e7c1-428a-bd98-f7bbdf192c5b</id>
  <name>DR-4c_SecureFileTransfer</name>
  <description></description>
  <enabled>true</enabled>
  <version>2.1.1.5490</version>
  <lastModified>
    <time>1316190071307</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>5</revision>
  <sourceConnector>
    <name>sourceConnector</name>
    <properties>
      <property name="DataType">Channel Reader</property>
      <property name="responseValue">sendToSFTP</property>
    </properties>
    <transformer>
      <steps/>
      <inboundProtocol>XML</inboundProtocol>
      <outboundProtocol>XML</outboundProtocol>
      <inboundProperties>
        <property name="stripNamespaces">false</property>
      </inboundProperties>
      <outboundProperties>
        <property name="stripNamespaces">false</property>
      </outboundProperties>
    </transformer>
    <filter>
      <rules/>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <version>2.1.1.5490</version>
  </sourceConnector>
  <destinationConnectors>
    <connector>
      <name>sendToSFTP</name>
      <properties>
        <property name="DataType">JavaScript Writer</property>
        <property name="host">sink</property>
        <property name="script">return;
</property>
      </properties>
      <transformer>
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>sendToSFTP</name>
            <script>var ftpsSender = globalMap.get(&apos;ftpsSender&apos;);
var is = new Packages.java.io.ByteArrayInputStream(new Packages.java.lang.String(msg).getBytes());
ftpsSender.sendDocument(is);</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var ftpsSender = globalMap.get(&apos;ftpsSender&apos;);
var is = new Packages.java.io.ByteArrayInputStream(new Packages.java.lang.String(msg).getBytes());
ftpsSender.sendDocument(is);</string>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">false</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">false</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.1.1.5490</version>
    </connector>
  </destinationConnectors>
  <properties>
    <property name="clearGlobalChannelMap">true</property>
    <property name="dont_store_filtered">false</property>
    <property name="encryptData">false</property>
    <property name="error_messages_only">false</property>
    <property name="initialState">started</property>
    <property name="max_message_age">-1</property>
    <property name="store_messages">true</property>
    <property name="synchronous">true</property>
    <property name="transactional">false</property>
  </properties>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
var transformerContext = new Packages.org.springframework.context.support.ClassPathXmlApplicationContext(&quot;classpath*:applicationContext-ip-mirth.xml&quot;);
var ftpsSender = transformerContext.getBean(&quot;sender&quot;);

globalChannelMap.put(&apos;ftpsSender&apos;, ftpsSender);
return;</deployScript>
  <shutdownScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</shutdownScript>
</channel>