<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:http="http://cxf.apache.org/transports/http/configuration"
       xmlns:sec="http://cxf.apache.org/configuration/security"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://camel.apache.org/schema/spring
http://camel.apache.org/schema/spring/camel-spring.xsd
http://cxf.apache.org/transports/http/configuration
http://cxf.apache.org/schemas/configuration/http-conf.xsd
http://cxf.apache.org/configuration/security
http://cxf.apache.org/schemas/configuration/security.xsd
 http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
">

    <!-- The following imports are required to configure CXF. cxf-servlet
           is imported to configure CXF to run with servlet support. This
           allows us to use Tomcat with the CXFServlet instead of using CXF
           with a standalone Jetty server. -->
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <context:property-placeholder location="classpath:cacis-ip-test.properties"
                                  system-properties-mode="OVERRIDE"/>

    <camel:camelContext id="camelContext">
        <camel:endpoint id="openXDS-documentRegistry"
                        uri="xds-iti42://${openxds.secure.base.url}/services/DocumentRegistry?secure=true"/>
        <camel:endpoint id="openXDS-registryb"
                        uri="xds-iti42://${openxds.secure.base.url}/services/xdsregistryb?secure=true"/>

        <camel:route>
            <camel:from uri="direct:secure-xds-documentRegistery"/>
            <camel:to ref="openXDS-documentRegistry"/>
        </camel:route>
        <camel:route>
            <camel:from uri="direct:secure-xds-registeryb"/>
            <camel:to ref="openXDS-registryb"/>
        </camel:route>
    </camel:camelContext>

    <http:conduit name="*.http-conduit">
        <http:tlsClientParameters disableCNCheck="true">
            <sec:keyManagers keyPassword="password">
                <sec:keyStore type="jks" password="password" resource="OpenXDS_2011_Keystore.jks"/>
            </sec:keyManagers>
            <sec:trustManagers>
                <sec:keyStore type="jks" password="password" resource="OpenXDS_2011_Truststore.jks"/>
            </sec:trustManagers>
            <sec:cipherSuitesFilter>
                <!-- these filters ensure that a ciphersuite with export-suitable or
                     null encryption is used, but exclude anonymous Diffie-Hellman
                     key change as this is vulnerable to man-in-the-middle attacks -->
                <sec:include>.*_EXPORT_.*</sec:include>
                <sec:include>.*_EXPORT1024_.*</sec:include>
                <sec:include>.*_WITH_DES_.*</sec:include>
                <sec:include>.*_WITH_NULL_.*</sec:include>
                <sec:exclude>.*_DH_anon_.*</sec:exclude>
            </sec:cipherSuitesFilter>
        </http:tlsClientParameters>
    </http:conduit>


</beans>
