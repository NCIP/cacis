package test;

import java.util.*;
   /* Tolven */
import java.util.*;
import org.tolven.trim.*;
import org.tolven.trim.ex.*;
import org.tolven.doc.entity.*;
import java.lang.Integer;
import org.tolven.app.entity.MenuStructure;
import org.tolven.app.entity.MenuData;
import org.tolven.app.bean.Mode;
import org.tolven.app.bean.Plan;
import org.tolven.core.entity.Status;
import org.tolven.model.Patient;

import gov.nih.nci.cacis.pcoplugin.tolven.ParseTRIMEx;

import java.net.URL;
import javax.xml.ws.Service;
import  gov.nih.nci.cacis.sa.service.*;
import javax.xml.namespace.QName;

global org.tolven.app.AppEvalAdaptor app;
global Date now;
global java.io.PrintStream out;

rule "caCIS Load Trim"
 when
     $trim: TrimEx()
     $msList: MenuStructure( path == "echr:patients:all" )
     $msPatient: MenuStructure( role == "placeholder", path == "echr:patient" )
     $mdPatient: MenuData( menuStructure == $msPatient )
  then
    II mdPatientII = $trim.getAct().getParticipations().get(0).getRole().getId().getIIS().get(0);
    //populate menu data row for placeholder
    $mdPatient.setString07(mdPatientII.getRoot());
    $mdPatient.setString08(mdPatientII.getExtension());

    MenuData mdPatientList = app.createReferenceMD( $mdPatient, $msList );
    //populate menu data row for list item
    mdPatientList.setString07(mdPatientII.getRoot());
    mdPatientList.setString08(mdPatientII.getExtension());
    app.getMenuBean().updateMenuData(mdPatientList);
	app.info("caCIS Calling Mock Semantic adapter.");

  try {

    URL wsdlURL = new URL("http://localhost:8080/ShareClinicalData?wsdl");

    QName SERVICE_NAME = new QName("http://sa.cacis.nci.nih.gov", "ShareClinicalData");
    Service service = Service.create(wsdlURL, SERVICE_NAME);
    ShareClinicalDataWs client = service.getPort(ShareClinicalDataWs.class);

    ParseTRIMEx marshaller = new ParseTRIMEx();

    String result = client.recieve(marshaller.marshallToString($trim));
    out.println( "Sent information to SA" );

    }catch (Exception e) {
              // ignore the exception
              //throw new RuntimeException("Could not share Clinical Data with Semantic Adapter", e);
    }

end
