<!--

    Copyright 5AM Solutions Inc
    Copyright SemanticBits LLC
    Copyright AgileX Technologies, Inc
    Copyright Ekagra Software Technologies Ltd

    Distributed under the OSI-approved BSD 3-Clause License.
    See http://ncip.github.com/cacis/LICENSE.txt for details.

-->
<channel>
  <id>f9460cc7-cf5e-413f-be05-23ba953d9f26</id>
  <name>SA-3_IdentifierAndVocabResolver</name>
  <description>Responsible for invoking the Identifier Resolver and Vocabulary Resolver external components to map the source identifiers and codes in the canonical data to standardized identifiers and codes. At this juncture this is just a pass through channel. Later release might have the actual implementation.</description>
  <enabled>true</enabled>
  <version>2.1.1.5490</version>
  <lastModified>
    <time>1314975086359</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>1</revision>
  <sourceConnector>
    <name>sourceConnector</name>
    <properties>
      <property name="DataType">Channel Reader</property>
      <property name="responseValue">InvokeIPCMPDestination</property>
    </properties>
    <transformer>
      <steps/>
      <inboundProtocol>XML</inboundProtocol>
      <outboundProtocol>XML</outboundProtocol>
      <inboundProperties>
        <property name="stripNamespaces">false</property>
      </inboundProperties>
      <outboundProperties>
        <property name="stripNamespaces">false</property>
      </outboundProperties>
    </transformer>
    <filter>
      <rules/>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <version>2.1.1.5490</version>
  </sourceConnector>
  <destinationConnectors>
    <connector>
      <name>InvokeIPCMPDestination</name>
      <properties>
        <property name="DataType">Channel Writer</property>
        <property name="host">0954b5b5-e525-4ca0-912d-11a06987f5da</property>
        <property name="synchronised">1</property>
        <property name="template">${message.encodedData}</property>
      </properties>
      <transformer>
        <steps/>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">false</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">false</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.1.1.5490</version>
    </connector>
  </destinationConnectors>
  <properties>
    <property name="clearGlobalChannelMap">false</property>
    <property name="dont_store_filtered">false</property>
    <property name="encryptData">false</property>
    <property name="error_messages_only">false</property>
    <property name="initialState">started</property>
    <property name="max_message_age">-1</property>
    <property name="store_messages">true</property>
    <property name="synchronous">true</property>
    <property name="transactional">false</property>
  </properties>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <shutdownScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</shutdownScript>
</channel>